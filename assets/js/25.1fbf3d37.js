(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{393:function(t,s,a){"use strict";a.r(s);var r=a(40),e=Object(r.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"···-数据传输规范"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#···-数据传输规范"}},[t._v("#")]),t._v(" ···  数据传输规范")]),t._v(" "),a("blockquote",[a("p",[t._v("此规范设计的目标是使浏览器端与业务系统相互传递的JSON数据保持一致，容易被理解和处理，并兼顾传输的数据量。")])]),t._v(" "),a("h2",{attrs:{id:"json数据类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#json数据类型"}},[t._v("#")]),t._v(" JSON数据类型")]),t._v(" "),a("p",[t._v("JSON（JavaScript Object Notation）是一种轻量级，基于文本，语言无关的数据交换格式。其包括了基本数据类型4种和复合数据类型2种，共6种数据类型。在下面章节中，JSON数据类型的表示法为JSON+空格+数据类型，如：JSON Array。")]),t._v(" "),a("font",{attrs:{color:"#ff7474"}},[a("p",[t._v("传输的数据，包括对象属性以及数组成员， "),a("strong",[t._v("必须")]),t._v(" 是6种JSON数据类型之一。 "),a("strong",[t._v("禁止")]),t._v(" 使用function、Date等js对象类型。")])]),t._v(" "),a("h3",{attrs:{id:"基本数据类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基本数据类型"}},[t._v("#")]),t._v(" 基本数据类型")]),t._v(" "),a("ul",[a("li",[t._v("Number：可以表示整数和浮点数。")]),t._v(" "),a("li",[t._v("Boolean：可以表示真假，值为true或false。")]),t._v(" "),a("li",[t._v("String：表示一个字符串。")]),t._v(" "),a("li",[t._v("Null：通常用于表示空对象。")])]),t._v(" "),a("p",[t._v('"true" 和 true，这两个数据代表的是不同的数据类型。非字符串类型数据输出时一定 '),a("strong",[t._v("禁止")]),t._v(' 为两端加上双引号，否则可能产生不希望的后果（如if中判断"false"的结果是true）。其他容易产生错误的例子如：0和"0"等。')]),t._v(" "),a("h3",{attrs:{id:"复合数据类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#复合数据类型"}},[t._v("#")]),t._v(" 复合数据类型")]),t._v(" "),a("p",[t._v("Object是无序的集合，以键值对的方式保持数据。一个Object中包含零到多个name/value的数据，数据间以逗号(,)分隔。name为String类型，value可以是任意类型的数据。")]),t._v(" "),a("p",[t._v("Object的最后一个元素之后一定 "),a("strong",[t._v("禁止")]),t._v(" 加上分隔符的逗号，否则可能导致解析出错。")]),t._v(" "),a("p",[t._v("Array(数组)为多个值的有序集合，数组元素间以逗号(,)分隔。")]),t._v(" "),a("h2",{attrs:{id:"http响应头"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#http响应头"}},[t._v("#")]),t._v(" http响应头")]),t._v(" "),a("h3",{attrs:{id:"status"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#status"}},[t._v("#")]),t._v(" status")]),t._v(" "),a("p",[t._v("http响应的status "),a("strong",[t._v("必须")]),t._v(" 为200。通常JSON数据被用于通过XMLHttpRequest对象访问，通过javascript进行处理。返回错误的状态码可能导致错误不被响应，数据不被处理。")]),t._v(" "),a("h3",{attrs:{id:"content-type"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#content-type"}},[t._v("#")]),t._v(" Content-Type")]),t._v(" "),a("p",[t._v("Content-Type字段定义了响应体的类型。一般情况下，浏览器会根据该类型对内容进行正确的处理。对于传输JSON数据的响应，Content-Type "),a("strong",[t._v("推荐")]),t._v(' 设置为"text/javascript"或"text/plain"。 '),a("strong",[t._v("避免")]),t._v(" 将Context-Type设置为text/html，否则可能导致安全问题。")]),t._v(" "),a("p",[t._v("Content-Type中可以指定字符集。通常 "),a("strong",[t._v("需要")]),t._v(" 明确指定一个字符集。如果是通过XMLHTTPRequest请求的数据，并且字符编码为UTF-8时，可以不指定字符集。")]),t._v(" "),a("h4",{attrs:{id:"context-type示例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#context-type示例"}},[t._v("#")]),t._v(" Context-Type示例")]),t._v(" "),a("p",[t._v("text/javascript;charset=UTF-8")]),t._v(" "),a("h2",{attrs:{id:"数据字段"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据字段"}},[t._v("#")]),t._v(" 数据字段")]),t._v(" "),a("p",[t._v("返回的数据包含在http响应体中。数据 "),a("strong",[t._v("必须")]),t._v(" 是一个JSON Object。该Object可能包含3个字段：status，statusInfo，data。")]),t._v(" "),a("h3",{attrs:{id:"status-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#status-2"}},[t._v("#")]),t._v(" status")]),t._v(" "),a("p",[t._v("status字段 "),a("strong",[t._v("必须")]),t._v(" 是一个不小于0的JSON Number整数，表示请求的状态。这个字段 "),a("strong",[t._v("可以(SHOULD)")]),t._v(" 被省略，省略时和为0时表示同一含义。")]),t._v(" "),a("ul",[a("li",[t._v("0：表示server端理解了请求，成功处理并返回。")]),t._v(" "),a("li",[t._v("非0：表示发生错误。 "),a("strong",[t._v("可以(SHOULD)")]),t._v(" 根据错误类型扩展错误码。")])]),t._v(" "),a("h4",{attrs:{id:"一个成功请求的status字段"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一个成功请求的status字段"}},[t._v("#")]),t._v(" 一个成功请求的status字段")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"status"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"data"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello world!"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"statusinfo"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#statusinfo"}},[t._v("#")]),t._v(" statusInfo")]),t._v(" "),a("p",[t._v("statusInfo字段 "),a("strong",[t._v("通常")]),t._v(" 是一个JSON String或JSON Object，表示除了请求状态外server端想要对status做出的说明，使client端能够获取更多信息进行后续处理。这个字段是 "),a("strong",[t._v("可选的")]),t._v(" 。下面的两个例子中，statusInfo字段的信息都可以用于client端程序的后续处理，但是粒度和处理方式会有不同。")]),t._v(" "),a("h4",{attrs:{id:"client端参数错误的statusinfo"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#client端参数错误的statusinfo"}},[t._v("#")]),t._v(" client端参数错误的statusInfo")]),t._v(" "),a("p",[t._v("简单说明的statusInfo：")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"status"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"statusInfo"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"参数错误"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("具有更多信息的statusInfo：")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"status"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"statusInfo"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"text"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"参数错误"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"parameters"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"email"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"电子邮件格式不正确"')]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"data"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#data"}},[t._v("#")]),t._v(" data")]),t._v(" "),a("p",[t._v("data字段可以是除JSON Null之外的任意JSON类型，表示请求返回的数据主体。这个字段是 "),a("strong",[t._v("可选的")]),t._v(" 。数据主体data包含了在请求成功时有意义的数据。")]),t._v(" "),a("h4",{attrs:{id:"一个查询姓名请求的返回数据"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一个查询姓名请求的返回数据"}},[t._v("#")]),t._v(" 一个查询姓名请求的返回数据")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"status"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"data"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Lily"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h2",{attrs:{id:"数据场景"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据场景"}},[t._v("#")]),t._v(" 数据场景")]),t._v(" "),a("p",[t._v("本章为常见数据场景定义了通用的标准数据格式，用于数据传输和使用。额外地，本章为部分可能大数据量传输的数据场景定义了变通数据格式。变通数据格式可在数据解析阶段转换成标准数据格式。")]),t._v(" "),a("p",[t._v("变通数据格式 "),a("strong",[t._v("必须")]),t._v(" 是一个JSON Object，其中 "),a("strong",[t._v("必须")]),t._v(" 包含e-type属性和data属性。e-type属性标识数据类型，便于对数据进行解析；data属性包含变通后的数据。变通数据 "),a("strong",[t._v("可以(MAY)")]),t._v(" 包含其他的属性，标识数据的其他扩展信息。")]),t._v(" "),a("p",[t._v("变通数据格式的e-type属性定义了table值。e-type属性可以使用者扩展其他属性值，扩展的属性值 "),a("strong",[t._v("必须")]),t._v(" 以“项目缩写-名称”命名，如“fc-list”，自主解析。")]),t._v(" "),a("h3",{attrs:{id:"日期类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#日期类型"}},[t._v("#")]),t._v(" 日期类型")]),t._v(" "),a("p",[t._v("日期类型不属于JSON数据类型。对于日期类型，我们 "),a("strong",[t._v("必须")]),t._v(" 使用JSON String来表示。为了让日期能够更容易的被显示和被解析，对于日期我们 "),a("strong",[t._v("应当(SHOULD)")]),t._v(" 使用更适合internet的格式，遵循rfc3339。")]),t._v(" "),a("h4",{attrs:{id:"数据场景-日期"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据场景-日期"}},[t._v("#")]),t._v(" 数据场景：日期")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"status"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"data"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2010-10-10"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])],1)}),[],!1,null,null,null);s.default=e.exports}}]);