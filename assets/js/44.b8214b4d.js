(window.webpackJsonp=window.webpackJsonp||[]).push([[44],{415:function(t,a,s){"use strict";s.r(a);var r=s(40),v=Object(r.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"···-简介"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#···-简介"}},[t._v("#")]),t._v(" ··· 简介")]),t._v(" "),s("h2",{attrs:{id:"定义"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#定义"}},[t._v("#")]),t._v(" 定义")]),t._v(" "),s("p",[t._v("算法（Algorithm）本意：解决问题的方法；")]),t._v(" "),s("p",[t._v("在计算机科学中是指，一系列解决问题的，清晰且可执行的计算机指令。")]),t._v(" "),s("h2",{attrs:{id:"计算机算法特性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#计算机算法特性"}},[t._v("#")]),t._v(" 计算机算法特性")]),t._v(" "),s("ul",[s("li",[t._v("有限性")]),t._v(" "),s("li",[t._v("确定性")]),t._v(" "),s("li",[t._v("可行性")]),t._v(" "),s("li",[t._v("输入")]),t._v(" "),s("li",[t._v("输出")])]),t._v(" "),s("h2",{attrs:{id:"学前思考"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#学前思考"}},[t._v("#")]),t._v(" 学前思考")]),t._v(" "),s("ul",[s("li",[t._v("为什么要使用？")]),t._v(" "),s("li",[t._v("解决了什么问题？")]),t._v(" "),s("li",[t._v("对现有的项目技术架构有什么提高？")])]),t._v(" "),s("h3",{attrs:{id:"为什么要使用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#为什么要使用"}},[t._v("#")]),t._v(" 为什么要使用？")]),t._v(" "),s("h3",{attrs:{id:"解决了什么问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#解决了什么问题"}},[t._v("#")]),t._v(" 解决了什么问题？")]),t._v(" "),s("h3",{attrs:{id:"对现有的项目技术架构有什么提高"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#对现有的项目技术架构有什么提高"}},[t._v("#")]),t._v(" 对现有的项目技术架构有什么提高？")]),t._v(" "),s("h2",{attrs:{id:"复杂度分析"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#复杂度分析"}},[t._v("#")]),t._v(" 复杂度分析")]),t._v(" "),s("p",[t._v("表示算法的性能")]),t._v(" "),s("ul",[s("li",[t._v("通常看最差的情况")]),t._v(" "),s("li",[t._v("算法运行的上限")]),t._v(" "),s("li",[t._v("常熟不重要")]),t._v(" "),s("li",[t._v("复杂度描述的是随着数据规模 n 的增大，算法性能的变化趋势")])]),t._v(" "),s("div",{staticClass:"language-txt extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("  T = 5000n + 100000\n  或\n  T = 5n +10\n  此两种函数的算法复杂度都为： O(n);\n\n  T2= 2n²\n  此种算法： O(n²)\n\n  O(n) <  O(n²)\n\n  注意：复杂度表示的是随着数据规模n的增大，算法性能的变化趋势\n")])])]),s("h2",{attrs:{id:"常见算法复杂度"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#常见算法复杂度"}},[t._v("#")]),t._v(" 常见算法复杂度")]),t._v(" "),s("div",{staticClass:"language-txt extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("\n遍历一个n*n的二维数组： O(n²)\n\n")])])])])}),[],!1,null,null,null);a.default=v.exports}}]);